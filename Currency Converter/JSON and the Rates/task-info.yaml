type: edu
files:
- name: cconverter/cconverter.py
  visible: true
  text: |-
    # write your code here!

    # RUB – Russian Ruble; 1 conicoin = 2.98 RUB;
    # ARS – Argentine Peso; 1 conicoin = 0.82 ARS;
    # HNL – Honduran Lempira; 1 conicoin = 0.17 HNL;
    # AUD – Australian Dollar; 1 conicoin = 1.9622 AUD;
    # MAD – Moroccan Dirham; 1 conicoin = 0.208 MAD.

    rub = 2.98
    ars = 0.82
    hnl = 0.17
    aud = 1.9622
    mad = 0.208
    coins = float(input())

    if str(coins)[-1] == "0":
        coins = int(coins)


    print(f"I will get {coins*rub} RUB from the sale of {coins} conicoins.")
    print(f"I will get {coins*ars} ARS from the sale of {coins} conicoins.")
    print(f"I will get {coins*hnl} HNL from the sale of {coins} conicoins.")
    print(f"I will get {coins*aud} AUD from the sale of {coins} conicoins.")
    print(f"I will get {coins*mad} MAD from the sale of {coins} conicoins.")
  learner_created: false
- name: tests.py
  visible: false
  text: |
    from typing import List

    import ast
    import json
    import requests
    from hstest.check_result import CheckResult
    from hstest.stage_test import StageTest
    from hstest.test_case import TestCase
    from hstest import WrongAnswer


    class TestStage5(StageTest):

        def generate(self) -> List[TestCase]:
            list_tests = [
                TestCase(stdin='HNL', attach='HNL'),
                TestCase(stdin='ILS', attach='ILS')

            ]

            try:
                check_con = requests.get(f"https://www.floatrates.com/currency/eur/")
            except requests.exceptions.ConnectionError:
                raise WrongAnswer("Make sure that your Internet connection is fine, the URL "
                                  "is correct and floatrates.com is not down")

            return list_tests

        def check(self, reply: str, attach) -> CheckResult:
            json_to_be = requests.get(f"http://www.floatrates.com/daily/{attach}.json").text
            reply_parsed = [i for i in reply.split('\n') if i]
            usd_json = json.loads(json_to_be)['usd']
            eur_json = json.loads(json_to_be)['eur']
            he = {}
            jsons = [usd_json, eur_json]
            if len(reply_parsed) != 2:
                return CheckResult.wrong("Your output is incorrect")
            for i, repl in enumerate(reply_parsed):
                try:
                    repl = ast.literal_eval(repl)
                except SyntaxError:
                    return CheckResult.wrong("The format of the data is incorrect")
                except ValueError:
                    return CheckResult.wrong("The format of the data is incorrect")
                if type(repl) != dict:
                    return CheckResult.wrong("Your output should contain a dictionary.\n"
                                             "Make sure the format of your output is correct.")
                for key in repl.keys():
                    try:
                        if repl[key] != jsons[i][key]:
                            return CheckResult.wrong("Make sure your output is right")
                    except KeyError:
                        return CheckResult.wrong("The key needed is absent in your data")

            return CheckResult.correct()


    if __name__ == '__main__':
        TestStage5("cconverter.cconverter").run_tests()
  learner_created: false
- name: naam.cache
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/12123#comment
status: Failed
feedback:
  message: |-
    Error in test #1

    Program ran out of input. You tried to read more than expected.

    Please find below the output of your program during this failed test.
    Note that the '>' character indicates the beginning of the input line.

    ---

    > HNL
  time: Sun, 30 Oct 2022 12:37:00 UTC
record: 5
